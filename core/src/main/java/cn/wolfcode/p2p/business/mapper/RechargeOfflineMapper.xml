<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.business.mapper.RechargeOfflineMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.business.domain.RechargeOffline" >
    <id column="id" property="id" />
    <result column="state" property="state" />
    <result column="remark" property="remark" />
    <result column="auditTime" property="auditTime" />
    <result column="applyTime" property="applyTime" />
    <result column="tradeCode" property="tradeCode" />
    <result column="tradeTime" property="tradeTime" />
    <result column="amount" property="amount" />
    <result column="note" property="note" />
    <association property="applier" javaType="cn.wolfcode.p2p.base.domain.Logininfo" columnPrefix="ap_">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>
    <association property="auditor" javaType="cn.wolfcode.p2p.base.domain.Logininfo" columnPrefix="au_">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>
    <association property="bankInfo" javaType="cn.wolfcode.p2p.business.domain.PlatformBankinfo" columnPrefix="bank_">
      <id column="id" property="id" />
      <result column="bankName" property="bankName" />
      <result column="accountName" property="accountName" />
      <result column="accountNumber" property="accountNumber" />
      <result column="bankForkname" property="bankForkname" />
    </association>
  </resultMap>
  <insert id="insert" parameterType="cn.wolfcode.p2p.business.domain.RechargeOffline" useGeneratedKeys="true" keyProperty="id" >
    insert into `rechargeoffline` (state, remark, auditTime, applyTime, auditor_id, applier_id, 
      tradeCode, tradeTime, amount, note, bankInfo_id)
    values (#{state}, #{remark}, #{auditTime}, #{applyTime}, #{auditor.id}, #{applier.id}, 
      #{tradeCode}, #{tradeTime}, #{amount}, #{note}, #{bankInfo.id})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.business.domain.RechargeOffline" >
    update `rechargeoffline`
    set state = #{state},
      remark = #{remark},
      auditTime = #{auditTime},
      applyTime = #{applyTime},
      auditor_id = #{auditor.id},
      applier_id = #{applier.id},
      tradeCode = #{tradeCode},
      tradeTime = #{tradeTime},
      amount = #{amount},
      note = #{note},
      bankInfo_id = #{bankInfo.id}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select ro.id, ro.state, ro.remark, ro.auditTime, ro.applyTime, ro.tradeCode,
    ro.tradeTime, ro.amount, ro.note,
    ap.id as ap_id,ap.username as ap_username,
    au.id as au_id,au.username as au_username,
    bank.id as bank_id,bank.bankName as bank_bankName,bank.accountNumber as bank_accountNumber,
    bank.bankForkname as bank_bankForkname,bank.accountName as bank_accountName
    from `rechargeoffline` ro
    join logininfo ap on(ro.applier_id=ap.id)
    LEFT join logininfo au on (ro.auditor_id=au.id)
    JOIN platformbankinfo bank on(ro.bankInfo_id=bank.id)
    where ro.id = #{id}
  </select>
  <sql id="base_where">
    <where></where>
  </sql>
  <select id="queryPage" resultMap="BaseResultMap">
     select ro.id, ro.state, ro.remark, ro.auditTime, ro.applyTime, ro.tradeCode,
    ro.tradeTime, ro.amount, ro.note,
    ap.id as ap_id,ap.username as ap_username,
    au.id as au_id,au.username as au_username,
    bank.id as bank_id,bank.bankName as bank_bankName,bank.accountNumber as bank_accountNumber,
    bank.bankForkname as bank_bankForkname,bank.accountName as bank_accountName
    from `rechargeoffline` ro
    join logininfo ap on(ro.applier_id=ap.id)
    LEFT join logininfo au on (ro.auditor_id=au.id)
    JOIN platformbankinfo bank on(ro.bankInfo_id=bank.id)
    <include refid="base_where"/>
  </select>
</mapper>