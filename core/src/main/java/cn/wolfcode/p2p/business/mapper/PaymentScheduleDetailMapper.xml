<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.business.mapper.PaymentScheduleDetailMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.business.domain.PaymentScheduleDetail" >
    <id column="id" property="id" />
    <result column="bidAmount" property="bidAmount" />
    <result column="bidId" property="bidId" />
    <result column="totalAmount" property="totalAmount" />
    <result column="principal" property="principal" />
    <result column="interest" property="interest" />
    <result column="monthIndex" property="monthIndex" />
    <result column="deadLine" property="deadLine" />
    <result column="bidRequestId" property="bidRequestId" />
    <result column="payDate" property="payDate" />
    <result column="returnType" property="returnType" />
    <result column="paymentScheduleId" property="paymentScheduleId" />
    <result column="toLogininfo" property="toLogininfo" />
    <association property="fromLogininfo" javaType="cn.wolfcode.p2p.base.domain.Logininfo" columnPrefix="fi_">
      <id column="id" property="id"/>
      <result column="username" property="username"/>
    </association>
  </resultMap>
  <insert id="insert" parameterType="cn.wolfcode.p2p.business.domain.PaymentScheduleDetail" useGeneratedKeys="true" keyProperty="id" >
    insert into `paymentscheduledetail` (bidAmount, bidId, totalAmount, principal, interest, monthIndex, 
      deadLine, bidRequestId, payDate, returnType, paymentScheduleId, 
      fromlogininfo_id, toLogininfo)
    values (#{bidAmount}, #{bidId}, #{totalAmount}, #{principal}, #{interest}, #{monthIndex}, 
      #{deadLine}, #{bidRequestId}, #{payDate}, #{returnType}, #{paymentScheduleId}, 
      #{fromLogininfo.id}, #{toLogininfo})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.business.domain.PaymentScheduleDetail" >
    update `paymentscheduledetail`
    set bidAmount = #{bidAmount},
      bidId = #{bidId},
      totalAmount = #{totalAmount},
      principal = #{principal},
      interest = #{interest},
      monthIndex = #{monthIndex},
      deadLine = #{deadLine},
      bidRequestId = #{bidRequestId},
      payDate = #{payDate},
      returnType = #{returnType},
      paymentScheduleId = #{paymentScheduleId},
      fromlogininfo_id = #{fromLogininfo.id},
      toLogininfo = #{toLogininfo}
    where id = #{id}
  </update>
  <update id="updatePayDate">
    update paymentscheduledetail set payDate = #{payDate} where paymentScheduleId = #{paymentScheduleId}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select psd.id, psd.bidAmount, psd.bidId, psd.totalAmount,psd.principal, psd.interest, psd.monthIndex, psd.deadLine,
    psd.bidRequestId, psd.payDate, psd.returnType, psd.paymentScheduleId, psd.fromlogininfo_id, psd.toLogininfo,
    fi.id as fi_id,fi.username as fi_username
    from `paymentscheduledetail` psd
    join logininfo fi on(psd.fromlogininfo_id = fi.id)
    where psd.id = #{id}
  </select>
  <select id="selectByPaymentScheduleId" resultMap="BaseResultMap">
    select psd.id, psd.bidAmount, psd.bidId, psd.totalAmount,psd.principal, psd.interest, psd.monthIndex, psd.deadLine,
    psd.bidRequestId, psd.payDate, psd.returnType, psd.paymentScheduleId, psd.fromlogininfo_id, psd.toLogininfo,
    fi.id as fi_id,fi.username as fi_username
    from `paymentscheduledetail` psd
    join logininfo fi on(psd.fromlogininfo_id = fi.id)
    where psd.paymentScheduleId = #{paymentScheduleId}
  </select>
</mapper>